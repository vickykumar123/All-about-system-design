After you have load balancer set upped, Now its time to replicate the database. Database replication can be used in many database management
systems, usually with a master/slave relationship between the original (master) and the copies (slaves).

A master database generally only supports write operations. A slave database gets copies of the data from the master database and only supports read operations. All the data-modifying commands like insert, delete, or update must be sent to the master database. Most applications require a much higher ratio of reads to writes; thus, the number of slave
databases in a system is usually larger than the number of master databases.

 Distributed database management systems (DDBMS) work to ensure that changes, additions and deletions performed on the data at any given location are automatically reflected in the data stored at all the other locations. 

Database replication techniques:
1. Asynchronous replication: Data is first written to master storage and then to the replica. It is non-blocking, so one task isn't dependent on another. It doesn't guarantees data consistency because data can be lost due failure.

2. Synchronous replication, data is written to the primary storage and the replica simultaneously. It guarantees data consistency, but as high latency.

Advantages of Database replication:
â€¢ Better performance: In the master-slave model, all writes and updates happen in master nodes; whereas, read operations are distributed across slave nodes. This model improves performance because it allows more queries to be processed in parallel.
â€¢ Reliability: If one of your database servers is destroyed by a natural disaster, such as a typhoon or an earthquake, data is still preserved. 
â€¢ High availability: By replicating data across different locations.

The major disadvantage is, increased risk of data inconsistencies, as data can be updated simultaneously on different replicas.


Now the question is what happens if master database went down ðŸ¤”?
 If the master database goes offline, a slave database will be promoted to be the new master. All the database operations will be temporarily executed on the new master database. A new slave database will replace the old one for data replication immediately. In production systems, promoting a new master is more complicated as the data in a slave database might not be up to date. The missing data needs to be updated by running data recovery scripts.
